---
- name: Add kubectl PATH
  ansible.builtin.lineinfile:
    path: /etc/profile.d/kubepath.sh
    line: export PATH="/var/lib/rancher/rke2/bin:$PATH"
    create: yes

- ansible.builtin.include_tasks: etcdRAM_pre.yaml
  when: etcd_in_RAM

- ansible.builtin.include_tasks: helm.yaml
  when: kube_install_helm

- name: Collect NotReady nodes
  ansible.builtin.shell: "kubectl get nodes | grep NotReady | grep -v vnode-0 | awk '{print $1}'"
  register: notready_nodes
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  failed_when: false
  changed_when: false

- name: NotReady nodes
  ansible.builtin.debug:
    msg: "NotReady nodes: {{ notready_nodes.stdout }}"

- name: Cordon nodes
  ansible.builtin.shell: "kubectl cordon {{ item }} "
  loop:
    "{{ notready_nodes.stdout.split('\n') }}"
  register: output_cordon
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  when: notready_nodes.stdout | length > 0

- name: Output cordon nodes
  ansible.builtin.debug:
    msg: "Cordoned nodes: {{ output_cordon }}"
  when: notready_nodes.stdout | length > 0

#- name: Drain nodes
#  ansible.builtin.shell: "kubectl drain {{ item }} --delete-emptydir-data --ignore-daemonsets --force"
#  loop:
#    "{{ notready_nodes.stdout.split('\n') }}"
#  environment:
#    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
#  register: output_drain
#  when: notready_nodes.stdout | length > 0

#- name: Output drain nodes
#  ansible.builtin.debug:
#    msg: "Drain nodes: {{ output_drain }}"
#  when: notready_nodes.stdout | length > 0

- name: Delete NotReady nodes
  ansible.builtin.shell: "kubectl delete node {{ item }}"
  loop:
    "{{ notready_nodes.stdout.split('\n') }}"
  register: output_delete
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  when: notready_nodes.stdout | length > 0

- name: Output node deletion
  ansible.builtin.debug:
    msg: "Deleted nodes: {{ output_delete }}"
  when: notready_nodes.stdout | length > 0

- ansible.builtin.include_tasks: software-installation.yaml

- ansible.builtin.include_tasks: api-configuration.yaml

- ansible.builtin.include_tasks: etcdRAM_backup.yaml
  when: etcd_in_RAM
