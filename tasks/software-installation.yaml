---
- name: Check if cert-manager is already installed
  ansible.builtin.shell: "helm list -a -n cert-manager"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  register: cert_manager_present
- name: Install cert manager
  when: ('cert-manager' not in cert_manager_present.stdout) and kube_deploy_cert_manager
  block:
  - template:
      src: templates/cert-manager-values.yaml.j2
      dest: /etc/cert-manager-values.yaml
  - ansible.builtin.command: "{{ item }}"
    environment:
      KUBECONFIG: "{{ kubeconfig_path }}"
    with_items:
      - "helm repo add jetstack https://charts.jetstack.io"
      - "helm repo update"
      - "helm install cert-manager jetstack/cert-manager --atomic -n cert-manager --create-namespace --version {{ cert_manager_helm_version }} --values /etc/cert-manager-values.yaml"
- name: Wait Cert-Manager to start
  ansible.builtin.command: kubectl get deployment -n cert-manager -l 'app=webhook' -o 'jsonpath={.items[0].status.readyReplicas}'
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  register: cert_manager_webhook_deployment_status
  until: (cert_manager_webhook_deployment_status.stdout | default(0) | int) >= 1
  retries: 30
  delay: 15
- name: Define cluster issuer
  block:
  - template:
      src: templates/cluster-certs.yaml.j2
      dest: /etc/cluster-certs.yaml
  - ansible.builtin.command: kubectl apply -f /etc/cluster-certs.yaml
    environment:
      KUBECONFIG: "{{ kubeconfig_path }}"

- name: Check if dashboard is already installed
  ansible.builtin.shell: "helm list -a -n kube-system"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  register: dashboard_present
- name: Install dashboard
  when: ('dashboard' not in dashboard_present.stdout) and kube_deploy_dashboard
  block:
  - template:
      src: templates/dashboard-values.yaml.j2
      dest: /etc/dashboard-values.yaml
  - ansible.builtin.command: "{{ item }}"
    environment:
      KUBECONFIG: "{{ kubeconfig_path }}"
    with_items:
      - "helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/"
      - "helm repo update"
      - "helm install dashboard kubernetes-dashboard/kubernetes-dashboard --atomic -n kube-system --version {{ dashboard_helm_version }} --values /etc/dashboard-values.yaml"

- name: Check if monitoring is already installed
  ansible.builtin.shell: "helm list -a -n monitoring"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  register: monitoring_present
- name: Install monitoring
  when: ('monitoring' not in monitoring_present.stdout) and kube_deploy_monitoring
  block:
  - template:
      src: templates/monitoring-values.yaml.j2
      dest: /etc/monitoring-values.yaml
  - ansible.builtin.command: "{{ item }}"
    environment:
      KUBECONFIG: "{{ kubeconfig_path }}"
    with_items:
      - "helm repo add prometheus-community https://prometheus-community.github.io/helm-charts"
      - "helm repo update"
      - "helm install mon prometheus-community/kube-prometheus-stack --atomic -n monitoring --create-namespace --version {{ monitoring_helm_version }} --values /etc/monitoring-values.yaml"
